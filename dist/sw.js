!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=10)}([function(e,t,r){"use strict";try{self["workbox:core:6.0.2"]&&_()}catch(e){}},function(e,t,r){"use strict";try{self["workbox:precaching:6.0.2"]&&_()}catch(e){}},function(e,t,r){"use strict";try{self["workbox:strategies:6.0.2"]&&_()}catch(e){}},function(e,t,r){"use strict";try{self["workbox:routing:6.0.2"]&&_()}catch(e){}},function(e,t,r){"use strict";try{self["workbox:routing:6.0.2"]&&_()}catch(e){}},function(e,t,r){"use strict";try{self["workbox:expiration:6.0.2"]&&_()}catch(e){}},function(e,t,r){"use strict";try{self["workbox:cacheable-response:6.0.2"]&&_()}catch(e){}},function(e,t,r){"use strict";try{self["workbox:strategies:6.0.2"]&&_()}catch(e){}},function(e,t,r){(function(e){function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=function(e){"use strict";var r=Object.prototype,n=r.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",u=o.toStringTag||"@@toStringTag";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(e){c=function(e,t,r){return e[t]=r}}function s(e,t,r,n){var o=t&&t.prototype instanceof h?t:h,a=Object.create(o.prototype),i=new R(n||[]);return a._invoke=function(e,t,r){var n="suspendedStart";return function(o,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw a;return O()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var u=x(i,r);if(u){if(u===l)continue;return u}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var c=f(e,t,r);if("normal"===c.type){if(n=r.done?"completed":"suspendedYield",c.arg===l)continue;return{value:c.arg,done:r.done}}"throw"===c.type&&(n="completed",r.method="throw",r.arg=c.arg)}}}(e,r,i),a}function f(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=s;var l={};function h(){}function p(){}function y(){}var v={};v[a]=function(){return this};var d=Object.getPrototypeOf,m=d&&d(d(S([])));m&&m!==r&&n.call(m,a)&&(v=m);var b=y.prototype=h.prototype=Object.create(v);function g(e){["next","throw","return"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function w(e,r){var o;this._invoke=function(a,i){function u(){return new r((function(o,u){!function o(a,i,u,c){var s=f(e[a],e,i);if("throw"!==s.type){var l=s.arg,h=l.value;return h&&"object"===t(h)&&n.call(h,"__await")?r.resolve(h.__await).then((function(e){o("next",e,u,c)}),(function(e){o("throw",e,u,c)})):r.resolve(h).then((function(e){l.value=e,u(l)}),(function(e){return o("throw",e,u,c)}))}c(s.arg)}(a,i,o,u)}))}return o=o?o.then(u,u):u()}}function x(e,t){var r=e.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,x(e,t),"throw"===t.method))return l;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return l}var n=f(r,e.iterator,t.arg);if("throw"===n.type)return t.method="throw",t.arg=n.arg,t.delegate=null,l;var o=n.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,l):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,l)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function _(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function S(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,o=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:O}}function O(){return{value:void 0,done:!0}}return p.prototype=b.constructor=y,y.constructor=p,p.displayName=c(y,u,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,c(e,u,"GeneratorFunction")),e.prototype=Object.create(b),e},e.awrap=function(e){return{__await:e}},g(w.prototype),w.prototype[i]=function(){return this},e.AsyncIterator=w,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new w(s(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},g(b),c(b,u,"Generator"),b[a]=function(){return this},b.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=S,R.prototype={constructor:R,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(r,n){return i.type="throw",i.arg=e,t.next=r,n&&(t.method="next",t.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],i=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var u=n.call(a,"catchLoc"),c=n.call(a,"finallyLoc");if(u&&c){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,l):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),l},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),_(r),l}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;_(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:S(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),l}},e}("object"===t(e)?e.exports:{});try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}}).call(this,r(9)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,r){"use strict";r.r(t);r(8),r(0);var n=null,o=function(e){for(var t=e,r=arguments.length,n=new Array(r>1?r-1:0),o=1;o<r;o++)n[o-1]=arguments[o];return n.length>0&&(t+=" :: ".concat(JSON.stringify(n))),t};function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function u(e){var t="function"==typeof Map?new Map:void 0;return(u=function(e){if(null===e||(r=e,-1===Function.toString.call(r).indexOf("[native code]")))return e;var r;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return c(e,arguments,l(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),f(n,e)})(e)}function c(e,t,r){return(c=s()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&f(o,r.prototype),o}).apply(null,arguments)}function s(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,r,n=(t=a,r=s(),function(){var e,n=l(t);if(r){var o=l(this).constructor;e=Reflect.construct(n,arguments,o)}else e=n.apply(this,arguments);return i(this,e)});function a(e,t){var r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a);var i=o(e,t);return(r=n.call(this,i)).name=e,r.details=t,r}return a}(u(Error));r(3);function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var y=function(e){return e&&"object"===p(e)?e:{handle:e}};function v(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var d=function e(t,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"GET";v(this,e),this.handler=y(r),this.match=t,this.method=n};function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function g(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=x(e);if(t){var o=x(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return w(this,r)}}function w(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function x(e){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(r,e);var t=g(r);function r(e,n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r);return t.call(this,(function(t){var r=t.url,n=e.exec(r.href);if(n&&(r.origin===location.origin||0===n.index))return n.slice(1)}),n,o)}return r}(d),_=function(e){return new URL(String(e),location.href).href.replace(new RegExp("^".concat(location.origin)),"")};function R(e,t,r){return(R=S()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&O(o,r.prototype),o}).apply(null,arguments)}function S(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function O(e,t){return(O=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e){return function(e){if(Array.isArray(e))return A(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||P(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function P(e,t){if(e){if("string"==typeof e)return A(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?A(e,t):void 0}}function A(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function E(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var C,T=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._routes=new Map,this._defaultHandlerMap=new Map}var t,r,n;return t=e,(r=[{key:"addFetchListener",value:function(){var e=this;self.addEventListener("fetch",(function(t){var r=t.request,n=e.handleRequest({request:r,event:t});n&&t.respondWith(n)}))}},{key:"addCacheListener",value:function(){var e=this;self.addEventListener("message",(function(t){if(t.data&&"CACHE_URLS"===t.data.type){var r=t.data.payload,n=Promise.all(r.urlsToCache.map((function(r){"string"==typeof r&&(r=[r]);var n=R(Request,j(r));return e.handleRequest({request:n,event:t})})));t.waitUntil(n),t.ports&&t.ports[0]&&n.then((function(){return t.ports[0].postMessage(!0)}))}}))}},{key:"handleRequest",value:function(e){var t=this,r=e.request,n=e.event,o=new URL(r.url,location.href);if(o.protocol.startsWith("http")){var a=o.origin===location.origin,i=this.findMatchingRoute({event:n,request:r,sameOrigin:a,url:o}),u=i.params,c=i.route,s=c&&c.handler,f=r.method;if(!s&&this._defaultHandlerMap.has(f)&&(s=this._defaultHandlerMap.get(f)),s){var l;try{l=s.handle({url:o,request:r,event:n,params:u})}catch(e){l=Promise.reject(e)}return l instanceof Promise&&this._catchHandler&&(l=l.catch((function(e){return t._catchHandler.handle({url:o,request:r,event:n})}))),l}}}},{key:"findMatchingRoute",value:function(e){var t,r=e.url,n=e.sameOrigin,o=e.request,a=e.event,i=function(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=P(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}(this._routes.get(o.method)||[]);try{for(i.s();!(t=i.n()).done;){var u=t.value,c=void 0,s=u.match({url:r,sameOrigin:n,request:o,event:a});if(s)return c=s,(Array.isArray(s)&&0===s.length||s.constructor===Object&&0===Object.keys(s).length||"boolean"==typeof s)&&(c=void 0),{route:u,params:c}}}catch(e){i.e(e)}finally{i.f()}return{}}},{key:"setDefaultHandler",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET";this._defaultHandlerMap.set(t,y(e))}},{key:"setCatchHandler",value:function(e){this._catchHandler=y(e)}},{key:"registerRoute",value:function(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}},{key:"unregisterRoute",value:function(e){if(!this._routes.has(e.method))throw new h("unregister-route-but-not-found-with-method",{method:e.method});var t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new h("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}},{key:"routes",get:function(){return this._routes}}])&&E(t.prototype,r),n&&E(t,n),e}();function q(e,t,r){var n;if("string"==typeof e){var o=new URL(e,location.href);n=new d((function(e){return e.url.href===o.href}),t,r)}else if(e instanceof RegExp)n=new k(e,t,r);else if("function"==typeof e)n=new d(e,t,r);else{if(!(e instanceof d))throw new h("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});n=e}return(C||((C=new T).addFetchListener(),C.addCacheListener()),C).registerRoute(n),n}var U={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},L=function(e){return[U.prefix,e,U.suffix].filter((function(e){return e&&e.length>0})).join("-")},I=function(e){!function(e){for(var t=0,r=Object.keys(U);t<r.length;t++){e(r[t])}}((function(t){"string"==typeof e[t]&&(U[t]=e[t])}))},M=function(e){return e||L(U.precache)},D=function(e){return e||L(U.runtime)};function N(e,t){var r=t();return e.waitUntil(r),r}r(1);function K(e){if(!e)throw new h("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){var t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}var r=e.revision,n=e.url;if(!n)throw new h("add-to-cache-list-unexpected-type",{entry:e});if(!r){var o=new URL(n,location.href);return{cacheKey:o.href,url:o.href}}var a=new URL(n,location.href),i=new URL(n,location.href);return a.searchParams.set("__WB_REVISION__",r),{cacheKey:a.href,url:i.href}}function W(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function F(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){W(a,n,o,i,u,"next",e)}function u(e){W(a,n,o,i,u,"throw",e)}i(void 0)}))}}var H=function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=function(){var e=F(regeneratorRuntime.mark((function e(t){var r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=t.request,(n=t.state)&&(n.originalRequest=r);case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.cachedResponseWillBeUsed=function(){var e=F(regeneratorRuntime.mark((function e(r){var n,o,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.event,o=r.state,a=r.cachedResponse,"install"===n.type&&(i=o.originalRequest.url,a?t.notUpdatedURLs.push(i):t.updatedURLs.push(i)),e.abrupt("return",a);case 3:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()};function B(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}var $=function e(t){var r=this,n=t.precacheController;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.cacheKeyWillBeUsed=function(){var e,t=(e=regeneratorRuntime.mark((function e(t){var n,o,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.request,o=t.params,a=o&&o.cacheKey||r._precacheController.getCacheKeyForURL(n.url),e.abrupt("return",a?new Request(a):n);case 3:case"end":return e.stop()}}),e)})),function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){B(a,n,o,i,u,"next",e)}function u(e){B(a,n,o,i,u,"throw",e)}i(void 0)}))});return function(e){return t.apply(this,arguments)}}(),this._precacheController=n};var G;function V(){if(void 0===G){var e=new Response("");if("body"in e)try{new Response(e.body),G=!0}catch(e){G=!1}G=!1}return G}function Y(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function Q(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){Y(a,n,o,i,u,"next",e)}function u(e){Y(a,n,o,i,u,"throw",e)}i(void 0)}))}}function J(e,t){return z.apply(this,arguments)}function z(){return(z=Q(regeneratorRuntime.mark((function e(t,r){var n,o,a,i,u,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=null,t.url&&(o=new URL(t.url),n=o.origin),n===self.location.origin){e.next=4;break}throw new h("cross-origin-copy-response",{origin:n});case 4:if(a=t.clone(),i={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},u=r?r(i):i,!V()){e.next=11;break}e.t0=a.body,e.next=14;break;case 11:return e.next=13,a.blob();case 13:e.t0=e.sent;case 14:return c=e.t0,e.abrupt("return",new Response(c,u));case 16:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function X(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Z(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?X(Object(r),!0).forEach((function(t){ee(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):X(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function ee(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function te(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function re(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){te(a,n,o,i,u,"next",e)}function u(e){te(a,n,o,i,u,"throw",e)}i(void 0)}))}}function ne(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return oe(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return oe(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function oe(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function ae(e,t){var r,n=new URL(e),o=ne(t);try{for(o.s();!(r=o.n()).done;){var a=r.value;n.searchParams.delete(a)}}catch(e){o.e(e)}finally{o.f()}return n.href}function ie(e,t,r,n){return ue.apply(this,arguments)}function ue(){return(ue=re(regeneratorRuntime.mark((function e(t,r,n,o){var a,i,u,c,s,f,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a=ae(r.url,n),r.url!==a){e.next=3;break}return e.abrupt("return",t.match(r,o));case 3:return i=Z(Z({},o),{},{ignoreSearch:!0}),e.next=6,t.keys(r,i);case 6:u=e.sent,c=ne(u),e.prev=8,c.s();case 10:if((s=c.n()).done){e.next=17;break}if(f=s.value,l=ae(f.url,n),a!==l){e.next=15;break}return e.abrupt("return",t.match(f,o));case 15:e.next=10;break;case 17:e.next=22;break;case 19:e.prev=19,e.t0=e.catch(8),c.e(e.t0);case 22:return e.prev=22,c.f(),e.finish(22);case 25:return e.abrupt("return");case 26:case"end":return e.stop()}}),e,null,[[8,19,22,25]])})))).apply(this,arguments)}var ce=function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.promise=new Promise((function(e,r){t.resolve=e,t.reject=r}))},se=new Set;function fe(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return le(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return le(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function le(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function he(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function pe(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){he(a,n,o,i,u,"next",e)}function u(e){he(a,n,o,i,u,"throw",e)}i(void 0)}))}}function ye(){return ve.apply(this,arguments)}function ve(){return(ve=pe(regeneratorRuntime.mark((function e(){var t,r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:0,t=fe(se),e.prev=2,t.s();case 4:if((r=t.n()).done){e.next=11;break}return n=r.value,e.next=8,n();case 8:0;case 9:e.next=4;break;case 11:e.next=16;break;case 13:e.prev=13,e.t0=e.catch(2),t.e(e.t0);case 16:return e.prev=16,t.f(),e.finish(16);case 19:0;case 20:case"end":return e.stop()}}),e,null,[[2,13,16,19]])})))).apply(this,arguments)}function de(e){return new Promise((function(t){return setTimeout(t,e)}))}r(7);function me(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function be(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?me(Object(r),!0).forEach((function(t){ge(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):me(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function ge(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function we(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function xe(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){we(a,n,o,i,u,"next",e)}function u(e){we(a,n,o,i,u,"throw",e)}i(void 0)}))}}function ke(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=Re(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function _e(e){return function(e){if(Array.isArray(e))return Se(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Re(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Re(e,t){if(e){if("string"==typeof e)return Se(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Se(e,t):void 0}}function Se(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Oe(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function je(e){return"string"==typeof e?new Request(e):e}var Pe=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cacheKeys={},Object.assign(this,r),this.event=r.event,this._strategy=t,this._handlerDeferred=new ce,this._extendLifetimePromises=[],this._plugins=_e(t.plugins),this._pluginStateMap=new Map;var n,o=ke(this._plugins);try{for(o.s();!(n=o.n()).done;){var a=n.value;this._pluginStateMap.set(a,{})}}catch(e){o.e(e)}finally{o.f()}this.event.waitUntil(this._handlerDeferred.promise)}var t,r,n,o,a,i,u,c,s;return t=e,(r=[{key:"fetch",value:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){var t=this;return this.waitUntil(xe(regeneratorRuntime.mark((function r(){var n,o,a,i,u,c,s,f,l,p,y,v;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(n=t.event,!("navigate"===(o=je(e)).mode&&n instanceof FetchEvent&&n.preloadResponse)){r.next=9;break}return r.next=5,n.preloadResponse;case 5:if(!(a=r.sent)){r.next=9;break}return r.abrupt("return",a);case 9:i=t.hasCallback("fetchDidFail")?o.clone():null,r.prev=10,u=ke(t.iterateCallbacks("requestWillFetch")),r.prev=12,u.s();case 14:if((c=u.n()).done){r.next=21;break}return s=c.value,r.next=18,s({request:o.clone(),event:n});case 18:o=r.sent;case 19:r.next=14;break;case 21:r.next=26;break;case 23:r.prev=23,r.t0=r.catch(12),u.e(r.t0);case 26:return r.prev=26,u.f(),r.finish(26);case 29:r.next=34;break;case 31:throw r.prev=31,r.t1=r.catch(10),new h("plugin-error-request-will-fetch",{thrownError:r.t1});case 34:return f=o.clone(),r.prev=35,r.next=38,fetch(o,"navigate"===o.mode?void 0:t._strategy.fetchOptions);case 38:l=r.sent,p=ke(t.iterateCallbacks("fetchDidSucceed")),r.prev=41,p.s();case 43:if((y=p.n()).done){r.next=50;break}return v=y.value,r.next=47,v({event:n,request:f,response:l});case 47:l=r.sent;case 48:r.next=43;break;case 50:r.next=55;break;case 52:r.prev=52,r.t2=r.catch(41),p.e(r.t2);case 55:return r.prev=55,p.f(),r.finish(55);case 58:return r.abrupt("return",l);case 61:if(r.prev=61,r.t3=r.catch(35),!i){r.next=67;break}return r.next=67,t.runCallbacks("fetchDidFail",{error:r.t3,event:n,originalRequest:i.clone(),request:f.clone()});case 67:throw r.t3;case 68:case"end":return r.stop()}}),r,null,[[10,31],[12,23,26,29],[35,61],[41,52,55,58]])})))())}))},{key:"fetchAndCachePut",value:(s=xe(regeneratorRuntime.mark((function e(t){var r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.fetch(t);case 2:return r=e.sent,n=r.clone(),this.waitUntil(this.cachePut(t,n)),e.abrupt("return",r);case 6:case"end":return e.stop()}}),e,this)}))),function(e){return s.apply(this,arguments)})},{key:"cacheMatch",value:function(e){var t=this;return this.waitUntil(xe(regeneratorRuntime.mark((function r(){var n,o,a,i,u,c,s,f,l,h;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=je(e),a=t._strategy,i=a.cacheName,u=a.matchOptions,r.next=4,t.getCacheKey(n,"read");case 4:return c=r.sent,s=be(be({},u),{cacheName:i}),r.next=8,caches.match(c,s);case 8:o=r.sent,f=ke(t.iterateCallbacks("cachedResponseWillBeUsed")),r.prev=11,f.s();case 13:if((l=f.n()).done){r.next=23;break}return h=l.value,r.next=17,h({cacheName:i,matchOptions:u,cachedResponse:o,request:c,event:t.event});case 17:if(r.t0=r.sent,r.t0){r.next=20;break}r.t0=void 0;case 20:o=r.t0;case 21:r.next=13;break;case 23:r.next=28;break;case 25:r.prev=25,r.t1=r.catch(11),f.e(r.t1);case 28:return r.prev=28,f.f(),r.finish(28);case 31:return r.abrupt("return",o);case 32:case"end":return r.stop()}}),r,null,[[11,25,28,31]])})))())}},{key:"cachePut",value:(c=xe(regeneratorRuntime.mark((function e(t,r){var n,o,a,i,u,c,s,f,l,p,y,v;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=je(t),e.next=3,de(0);case 3:return e.next=5,this.getCacheKey(n,"write");case 5:o=e.sent,e.next=9;break;case 9:if(r){e.next=12;break}throw new h("cache-put-with-no-response",{url:_(o.url)});case 12:return e.next=14,this._ensureResponseSafeToCache(r);case 14:if(a=e.sent){e.next=18;break}return e.abrupt("return");case 18:return i=this._strategy,u=i.cacheName,c=i.matchOptions,e.next=21,self.caches.open(u);case 21:if(s=e.sent,!(f=this.hasCallback("cacheDidUpdate"))){e.next=29;break}return e.next=26,ie(s,o.clone(),["__WB_REVISION__"],c);case 26:e.t0=e.sent,e.next=30;break;case 29:e.t0=null;case 30:return l=e.t0,e.prev=32,e.next=35,s.put(o,f?a.clone():a);case 35:e.next=43;break;case 37:if(e.prev=37,e.t1=e.catch(32),"QuotaExceededError"!==e.t1.name){e.next=42;break}return e.next=42,ye();case 42:throw e.t1;case 43:p=ke(this.iterateCallbacks("cacheDidUpdate")),e.prev=44,p.s();case 46:if((y=p.n()).done){e.next=52;break}return v=y.value,e.next=50,v({cacheName:u,oldResponse:l,newResponse:a.clone(),request:o,event:this.event});case 50:e.next=46;break;case 52:e.next=57;break;case 54:e.prev=54,e.t2=e.catch(44),p.e(e.t2);case 57:return e.prev=57,p.f(),e.finish(57);case 60:case"end":return e.stop()}}),e,this,[[32,37],[44,54,57,60]])}))),function(e,t){return c.apply(this,arguments)})},{key:"getCacheKey",value:(u=xe(regeneratorRuntime.mark((function e(t,r){var n,o,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this._cacheKeys[r]){e.next=23;break}n=t,o=ke(this.iterateCallbacks("cacheKeyWillBeUsed")),e.prev=3,o.s();case 5:if((a=o.n()).done){e.next=14;break}return i=a.value,e.t0=je,e.next=10,i({mode:r,request:n,event:this.event,params:this.params});case 10:e.t1=e.sent,n=(0,e.t0)(e.t1);case 12:e.next=5;break;case 14:e.next=19;break;case 16:e.prev=16,e.t2=e.catch(3),o.e(e.t2);case 19:return e.prev=19,o.f(),e.finish(19);case 22:this._cacheKeys[r]=n;case 23:return e.abrupt("return",this._cacheKeys[r]);case 24:case"end":return e.stop()}}),e,this,[[3,16,19,22]])}))),function(e,t){return u.apply(this,arguments)})},{key:"hasCallback",value:function(e){var t,r=ke(this._strategy.plugins);try{for(r.s();!(t=r.n()).done;)if(e in t.value)return!0}catch(e){r.e(e)}finally{r.f()}return!1}},{key:"runCallbacks",value:(i=xe(regeneratorRuntime.mark((function e(t,r){var n,o,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=ke(this.iterateCallbacks(t)),e.prev=1,n.s();case 3:if((o=n.n()).done){e.next=9;break}return a=o.value,e.next=7,a(r);case 7:e.next=3;break;case 9:e.next=14;break;case 11:e.prev=11,e.t0=e.catch(1),n.e(e.t0);case 14:return e.prev=14,n.f(),e.finish(14);case 17:case"end":return e.stop()}}),e,this,[[1,11,14,17]])}))),function(e,t){return i.apply(this,arguments)})},{key:"iterateCallbacks",value:regeneratorRuntime.mark((function e(t){var r,n,o,a=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=ke(this._strategy.plugins),e.prev=1,o=regeneratorRuntime.mark((function e(){var r,o,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("function"!=typeof(r=n.value)[t]){e.next=6;break}return o=a._pluginStateMap.get(r),i=function(e){var n=be(be({},e),{},{state:o});return r[t](n)},e.next=6,i;case 6:case"end":return e.stop()}}),e)})),r.s();case 4:if((n=r.n()).done){e.next=8;break}return e.delegateYield(o(),"t0",6);case 6:e.next=4;break;case 8:e.next=13;break;case 10:e.prev=10,e.t1=e.catch(1),r.e(e.t1);case 13:return e.prev=13,r.f(),e.finish(13);case 16:case"end":return e.stop()}}),e,this,[[1,10,13,16]])}))},{key:"waitUntil",value:function(e){return this._extendLifetimePromises.push(e),e}},{key:"doneWaiting",value:(a=xe(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(t=this._extendLifetimePromises.shift())){e.next=5;break}return e.next=3,t;case 3:e.next=0;break;case 5:case"end":return e.stop()}}),e,this)}))),function(){return a.apply(this,arguments)})},{key:"destroy",value:function(){this._handlerDeferred.resolve()}},{key:"_ensureResponseSafeToCache",value:(o=xe(regeneratorRuntime.mark((function e(t){var r,n,o,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=t,n=!1,o=ke(this.iterateCallbacks("cacheWillUpdate")),e.prev=3,o.s();case 5:if((a=o.n()).done){e.next=18;break}return i=a.value,e.next=9,i({request:this.request,response:r,event:this.event});case 9:if(e.t0=e.sent,e.t0){e.next=12;break}e.t0=void 0;case 12:if(r=e.t0,n=!0,r){e.next=16;break}return e.abrupt("break",18);case 16:e.next=5;break;case 18:e.next=23;break;case 20:e.prev=20,e.t1=e.catch(3),o.e(e.t1);case 23:return e.prev=23,o.f(),e.finish(23);case 26:return n||r&&200!==r.status&&(r=void 0),e.abrupt("return",r);case 28:case"end":return e.stop()}}),e,this,[[3,20,23,26]])}))),function(e){return o.apply(this,arguments)})}])&&Oe(t.prototype,r),n&&Oe(t,n),e}();function Ae(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=qe(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function Ee(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function Ce(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){Ee(a,n,o,i,u,"next",e)}function u(e){Ee(a,n,o,i,u,"throw",e)}i(void 0)}))}}function Te(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,o=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==u.return||u.return()}finally{if(o)throw a}}return r}(e,t)||qe(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function qe(e,t){if(e){if("string"==typeof e)return Ue(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ue(e,t):void 0}}function Ue(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Le(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ie(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Me(e){return(Me="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function De(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ne(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Ke(e,t){return(Ke=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function We(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=He(e);if(t){var o=He(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Fe(this,r)}}function Fe(e,t){return!t||"object"!==Me(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function He(e){return(He=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Be(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function $e(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){Be(a,n,o,i,u,"next",e)}function u(e){Be(a,n,o,i,u,"throw",e)}i(void 0)}))}}var Ge={cacheWillUpdate:function(e){return $e(regeneratorRuntime.mark((function t(){var r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(r=e.response).redirected){t.next=7;break}return t.next=4,J(r);case 4:t.t0=t.sent,t.next=8;break;case 7:t.t0=r;case 8:return t.abrupt("return",t.t0);case 9:case"end":return t.stop()}}),t)})))()}},Ve=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ke(e,t)}(s,e);var t,r,o,a,i,u,c=We(s);function s(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return De(this,s),t.cacheName=M(t.cacheName),(e=c.call(this,t))._fallbackToNetwork=!1!==t.fallbackToNetwork,e.plugins.push(Ge),e}return t=s,(r=[{key:"_handle",value:(u=$e(regeneratorRuntime.mark((function e(t,r){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.cacheMatch(t);case 2:if(n=e.sent){e.next=11;break}if(!r.event||"install"!==r.event.type){e.next=8;break}return e.next=7,this._handleInstall(t,r);case 7:return e.abrupt("return",e.sent);case 8:return e.next=10,this._handleFetch(t,r);case 10:return e.abrupt("return",e.sent);case 11:return e.abrupt("return",n);case 12:case"end":return e.stop()}}),e,this)}))),function(e,t){return u.apply(this,arguments)})},{key:"_handleFetch",value:(i=$e(regeneratorRuntime.mark((function e(t,r){var o,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this._fallbackToNetwork){e.next=7;break}return e.next=4,r.fetch(t);case 4:o=e.sent,e.next=8;break;case 7:throw new h("missing-precache-entry",{cacheName:this.cacheName,url:t.url});case 8:e.next=24;break;case 13:e.t0=e.sent;case 14:a=e.t0,n.groupCollapsed("Precaching is responding to: "+_(t.url)),n.log("Serving the precached url: ".concat(_(a.url))),n.groupCollapsed("View request details here."),n.log(t),n.groupEnd(),n.groupCollapsed("View response details here."),n.log(o),n.groupEnd(),n.groupEnd();case 24:return e.abrupt("return",o);case 25:case"end":return e.stop()}}),e,this)}))),function(e,t){return i.apply(this,arguments)})},{key:"_handleInstall",value:(a=$e(regeneratorRuntime.mark((function e(t,r){var n,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.fetchAndCachePut(t);case 2:if(n=e.sent,o=Boolean(n),n&&n.status>=400&&!this._usesCustomCacheableResponseLogic()&&(o=!1),o){e.next=7;break}throw new h("bad-precaching-response",{url:t.url,status:n.status});case 7:return e.abrupt("return",n);case 8:case"end":return e.stop()}}),e,this)}))),function(e,t){return a.apply(this,arguments)})},{key:"_usesCustomCacheableResponseLogic",value:function(){return this.plugins.some((function(e){return e.cacheWillUpdate&&e!==Ge}))}}])&&Ne(t.prototype,r),o&&Ne(t,o),s}(function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Le(this,e),this.cacheName=D(t.cacheName),this.plugins=t.plugins||[],this.fetchOptions=t.fetchOptions,this.matchOptions=t.matchOptions}var t,r,n,o,a;return t=e,(r=[{key:"handle",value:function(e){return Te(this.handleAll(e),1)[0]}},{key:"handleAll",value:function(e){e instanceof FetchEvent&&(e={event:e,request:e.request});var t=e.event,r="string"==typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,o=new Pe(this,{event:t,request:r,params:n}),a=this._getResponse(o,r,t);return[a,this._awaitComplete(a,o,r,t)]}},{key:"_getResponse",value:(a=Ce(regeneratorRuntime.mark((function e(t,r,n){var o,a,i,u,c,s,f;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.runCallbacks("handlerWillStart",{event:n,request:r});case 2:return o=void 0,e.prev=3,e.next=6,this._handle(r,t);case 6:if((o=e.sent)&&"error"!==o.type){e.next=9;break}throw new h("no-response",{url:r.url});case 9:e.next=38;break;case 11:e.prev=11,e.t0=e.catch(3),a=Ae(t.iterateCallbacks("handlerDidError")),e.prev=14,a.s();case 16:if((i=a.n()).done){e.next=25;break}return u=i.value,e.next=20,u({error:e.t0,event:n,request:r});case 20:if(!(o=e.sent)){e.next=23;break}return e.abrupt("break",25);case 23:e.next=16;break;case 25:e.next=30;break;case 27:e.prev=27,e.t1=e.catch(14),a.e(e.t1);case 30:return e.prev=30,a.f(),e.finish(30);case 33:if(o){e.next=37;break}throw e.t0;case 37:case 38:c=Ae(t.iterateCallbacks("handlerWillRespond")),e.prev=39,c.s();case 41:if((s=c.n()).done){e.next=48;break}return f=s.value,e.next=45,f({event:n,request:r,response:o});case 45:o=e.sent;case 46:e.next=41;break;case 48:e.next=53;break;case 50:e.prev=50,e.t2=e.catch(39),c.e(e.t2);case 53:return e.prev=53,c.f(),e.finish(53);case 56:return e.abrupt("return",o);case 57:case"end":return e.stop()}}),e,this,[[3,11],[14,27,30,33],[39,50,53,56]])}))),function(e,t,r){return a.apply(this,arguments)})},{key:"_awaitComplete",value:(o=Ce(regeneratorRuntime.mark((function e(t,r,n,o){var a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t;case 3:a=e.sent,e.next=8;break;case 6:e.prev=6,e.t0=e.catch(0);case 8:return e.prev=8,e.next=11,r.runCallbacks("handlerDidRespond",{event:o,request:n,response:a});case 11:return e.next=13,r.doneWaiting();case 13:e.next=18;break;case 15:e.prev=15,e.t1=e.catch(8),i=e.t1;case 18:return e.next=20,r.runCallbacks("handlerDidComplete",{event:o,request:n,response:a,error:i});case 20:if(r.destroy(),!i){e.next=23;break}throw i;case 23:case"end":return e.stop()}}),e,null,[[0,6],[8,15]])}))),function(e,t,r,n){return o.apply(this,arguments)})}])&&Ie(t.prototype,r),n&&Ie(t,n),e}());function Ye(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Qe(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Je(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,o=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==u.return||u.return()}finally{if(o)throw a}}return r}(e,t)||tt(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ze(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function Xe(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){ze(a,n,o,i,u,"next",e)}function u(e){ze(a,n,o,i,u,"throw",e)}i(void 0)}))}}function Ze(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=tt(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function et(e){return function(e){if(Array.isArray(e))return rt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||tt(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function tt(e,t){if(e){if("string"==typeof e)return rt(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?rt(e,t):void 0}}function rt(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function nt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ot(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var at,it=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=t.cacheName,n=t.plugins,o=void 0===n?[]:n,a=t.fallbackToNetwork,i=void 0===a||a;nt(this,e),this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new Ve({cacheName:M(r),plugins:[].concat(et(o),[new $({precacheController:this})]),fallbackToNetwork:i}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}var t,r,n,o;return t=e,(r=[{key:"precache",value:function(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}},{key:"addToCacheList",value:function(e){var t,r=[],n=Ze(e);try{for(n.s();!(t=n.n()).done;){var o=t.value;"string"==typeof o?r.push(o):o&&void 0===o.revision&&r.push(o.url);var a=K(o),i=a.cacheKey,u=a.url,c="string"!=typeof o&&o.revision?"reload":"default";if(this._urlsToCacheKeys.has(u)&&this._urlsToCacheKeys.get(u)!==i)throw new h("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(u),secondEntry:i});if("string"!=typeof o&&o.integrity){if(this._cacheKeysToIntegrities.has(i)&&this._cacheKeysToIntegrities.get(i)!==o.integrity)throw new h("add-to-cache-list-conflicting-integrities",{url:u});this._cacheKeysToIntegrities.set(i,o.integrity)}if(this._urlsToCacheKeys.set(u,i),this._urlsToCacheModes.set(u,c),r.length>0){var s="Workbox is precaching URLs without revision "+"info: ".concat(r.join(", "),"\nThis is generally NOT safe. ")+"Learn more at https://bit.ly/wb-precache";console.warn(s)}}}catch(e){n.e(e)}finally{n.f()}}},{key:"install",value:function(e){var t=this;return N(e,Xe(regeneratorRuntime.mark((function r(){var n,o,a,i,u,c,s,f,l,h,p;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:n=new H,t.strategy.plugins.push(n),o=Ze(t._urlsToCacheKeys),r.prev=3,o.s();case 5:if((a=o.n()).done){r.next=14;break}return i=Je(a.value,2),u=i[0],c=i[1],s=t._cacheKeysToIntegrities.get(c),f=t._urlsToCacheModes.get(u),l=new Request(u,{integrity:s,cache:f,credentials:"same-origin"}),r.next=12,Promise.all(t.strategy.handleAll({params:{cacheKey:c},request:l,event:e}));case 12:r.next=5;break;case 14:r.next=19;break;case 16:r.prev=16,r.t0=r.catch(3),o.e(r.t0);case 19:return r.prev=19,o.f(),r.finish(19);case 22:return h=n.updatedURLs,p=n.notUpdatedURLs,r.abrupt("return",{updatedURLs:h,notUpdatedURLs:p});case 25:case"end":return r.stop()}}),r,null,[[3,16,19,22]])}))))}},{key:"activate",value:function(e){var t=this;return N(e,Xe(regeneratorRuntime.mark((function e(){var r,n,o,a,i,u,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,self.caches.open(t.strategy.cacheName);case 2:return r=e.sent,e.next=5,r.keys();case 5:n=e.sent,o=new Set(t._urlsToCacheKeys.values()),a=[],i=Ze(n),e.prev=9,i.s();case 11:if((u=i.n()).done){e.next=19;break}if(c=u.value,o.has(c.url)){e.next=17;break}return e.next=16,r.delete(c);case 16:a.push(c.url);case 17:e.next=11;break;case 19:e.next=24;break;case 21:e.prev=21,e.t0=e.catch(9),i.e(e.t0);case 24:return e.prev=24,i.f(),e.finish(24);case 27:return e.abrupt("return",{deletedURLs:a});case 29:case"end":return e.stop()}}),e,null,[[9,21,24,27]])}))))}},{key:"getURLsToCacheKeys",value:function(){return this._urlsToCacheKeys}},{key:"getCachedURLs",value:function(){return et(this._urlsToCacheKeys.keys())}},{key:"getCacheKeyForURL",value:function(e){var t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}},{key:"matchPrecache",value:(o=Xe(regeneratorRuntime.mark((function e(t){var r,n,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t instanceof Request?t.url:t,!(n=this.getCacheKeyForURL(r))){e.next=7;break}return e.next=5,self.caches.open(this.strategy.cacheName);case 5:return o=e.sent,e.abrupt("return",o.match(n));case 7:return e.abrupt("return",void 0);case 8:case"end":return e.stop()}}),e,this)}))),function(e){return o.apply(this,arguments)})},{key:"createHandlerBoundToURL",value:function(e){var t=this,r=this.getCacheKeyForURL(e);if(!r)throw new h("non-precached-url",{url:e});return function(n){return n.request=new Request(e),n.params=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Ye(Object(r),!0).forEach((function(t){Qe(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Ye(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({cacheKey:r},n.params),t.strategy.handle(n)}}},{key:"strategy",get:function(){return this._strategy}}])&&ot(t.prototype,r),n&&ot(t,n),e}(),ut=function(){return at||(at=new it),at};function ct(e){return function(e){if(Array.isArray(e))return st(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return st(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return st(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function st(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function ft(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=function(){var r=o[n];t.some((function(e){return e.test(r)}))&&e.searchParams.delete(r)},n=0,o=ct(e.searchParams.keys());n<o.length;n++)r();return e}var lt=regeneratorRuntime.mark(yt);function ht(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return pt(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return pt(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function pt(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function yt(e){var t,r,n,o,a,i,u,c,s,f,l,h,p,y,v,d,m=arguments;return regeneratorRuntime.wrap((function(b){for(;;)switch(b.prev=b.next){case 0:return t=m.length>1&&void 0!==m[1]?m[1]:{},r=t.ignoreURLParametersMatching,n=void 0===r?[/^utm_/,/^fbclid$/]:r,o=t.directoryIndex,a=void 0===o?"index.html":o,i=t.cleanURLs,u=void 0===i||i,c=t.urlManipulation,(s=new URL(e,location.href)).hash="",b.next=5,s.href;case 5:return f=ft(s,n),b.next=8,f.href;case 8:if(!a||!f.pathname.endsWith("/")){b.next=13;break}return(l=new URL(f.href)).pathname+=a,b.next=13,l.href;case 13:if(!u){b.next=18;break}return(h=new URL(f.href)).pathname+=".html",b.next=18,h.href;case 18:if(!c){b.next=37;break}p=c({url:s}),y=ht(p),b.prev=21,y.s();case 23:if((v=y.n()).done){b.next=29;break}return d=v.value,b.next=27,d.href;case 27:b.next=23;break;case 29:b.next=34;break;case 31:b.prev=31,b.t0=b.catch(21),y.e(b.t0);case 34:return b.prev=34,y.f(),b.finish(34);case 37:case"end":return b.stop()}}),lt,null,[[21,31,34,37]])}function vt(e){return(vt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function dt(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return mt(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return mt(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function mt(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function bt(e,t){return(bt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function gt(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=xt(e);if(t){var o=xt(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return wt(this,r)}}function wt(e,t){return!t||"object"!==vt(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function xt(e){return(xt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var kt=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&bt(e,t)}(r,e);var t=gt(r);function r(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r);return t.call(this,(function(t){var r,o=t.request,a=e.getURLsToCacheKeys(),i=dt(yt(o.url,n));try{for(i.s();!(r=i.n()).done;){var u=r.value,c=a.get(u);if(c)return{cacheKey:c}}}catch(e){i.e(e)}finally{i.f()}}),e.strategy)}return r}(d);r(6);function _t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Rt(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var St=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};_t(this,e),this._statuses=t.statuses,this._headers=t.headers}var t,r,n;return t=e,(r=[{key:"isResponseCacheable",value:function(e){var t=this,r=!0;return this._statuses&&(r=this._statuses.includes(e.status)),this._headers&&r&&(r=Object.keys(this._headers).some((function(r){return e.headers.get(r)===t._headers[r]}))),r}}])&&Rt(t.prototype,r),n&&Rt(t,n),e}();function Ot(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}var jt=function(){var e,t=(e=regeneratorRuntime.mark((function e(t){var r,n,o,a=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=a.length>1&&void 0!==a[1]?a[1]:"-precache-",e.next=3,self.caches.keys();case 3:return n=e.sent,o=n.filter((function(e){return e.includes(r)&&e.includes(self.registration.scope)&&e!==t})),e.next=7,Promise.all(o.map((function(e){return self.caches.delete(e)})));case 7:return e.abrupt("return",o);case 8:case"end":return e.stop()}}),e)})),function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){Ot(a,n,o,i,u,"next",e)}function u(e){Ot(a,n,o,i,u,"throw",e)}i(void 0)}))});return function(e){return t.apply(this,arguments)}}();r(4);function Pt(e){return(Pt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var At=function(e){return e&&"object"===Pt(e)?e:{handle:e}};function Et(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var Ct=function e(t,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"GET";Et(this,e),this.handler=At(r),this.match=t,this.method=n};function Tt(e){return(Tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function qt(e,t){return(qt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Ut(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=It(e);if(t){var o=It(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Lt(this,r)}}function Lt(e,t){return!t||"object"!==Tt(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function It(e){return(It=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Mt=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&qt(e,t)}(r,e);var t=Ut(r);function r(e,n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r);return t.call(this,(function(t){var r=t.url,n=e.exec(r.href);if(n&&(r.origin===location.origin||0===n.index))return n.slice(1)}),n,o)}return r}(Ct);function Dt(e,t,r){return(Dt=Nt()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&Kt(o,r.prototype),o}).apply(null,arguments)}function Nt(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Kt(e,t){return(Kt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Wt(e){return function(e){if(Array.isArray(e))return Ht(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Ft(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ft(e,t){if(e){if("string"==typeof e)return Ht(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ht(e,t):void 0}}function Ht(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Bt(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var $t,Gt=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._routes=new Map,this._defaultHandlerMap=new Map}var t,r,n;return t=e,(r=[{key:"addFetchListener",value:function(){var e=this;self.addEventListener("fetch",(function(t){var r=t.request,n=e.handleRequest({request:r,event:t});n&&t.respondWith(n)}))}},{key:"addCacheListener",value:function(){var e=this;self.addEventListener("message",(function(t){if(t.data&&"CACHE_URLS"===t.data.type){var r=t.data.payload,n=Promise.all(r.urlsToCache.map((function(r){"string"==typeof r&&(r=[r]);var n=Dt(Request,Wt(r));return e.handleRequest({request:n,event:t})})));t.waitUntil(n),t.ports&&t.ports[0]&&n.then((function(){return t.ports[0].postMessage(!0)}))}}))}},{key:"handleRequest",value:function(e){var t=this,r=e.request,n=e.event,o=new URL(r.url,location.href);if(o.protocol.startsWith("http")){var a=o.origin===location.origin,i=this.findMatchingRoute({event:n,request:r,sameOrigin:a,url:o}),u=i.params,c=i.route,s=c&&c.handler,f=r.method;if(!s&&this._defaultHandlerMap.has(f)&&(s=this._defaultHandlerMap.get(f)),s){var l;try{l=s.handle({url:o,request:r,event:n,params:u})}catch(e){l=Promise.reject(e)}return l instanceof Promise&&this._catchHandler&&(l=l.catch((function(e){return t._catchHandler.handle({url:o,request:r,event:n})}))),l}}}},{key:"findMatchingRoute",value:function(e){var t,r=e.url,n=e.sameOrigin,o=e.request,a=e.event,i=function(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=Ft(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}(this._routes.get(o.method)||[]);try{for(i.s();!(t=i.n()).done;){var u=t.value,c=void 0,s=u.match({url:r,sameOrigin:n,request:o,event:a});if(s)return c=s,(Array.isArray(s)&&0===s.length||s.constructor===Object&&0===Object.keys(s).length||"boolean"==typeof s)&&(c=void 0),{route:u,params:c}}}catch(e){i.e(e)}finally{i.f()}return{}}},{key:"setDefaultHandler",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET";this._defaultHandlerMap.set(t,At(e))}},{key:"setCatchHandler",value:function(e){this._catchHandler=At(e)}},{key:"registerRoute",value:function(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}},{key:"unregisterRoute",value:function(e){if(!this._routes.has(e.method))throw new h("unregister-route-but-not-found-with-method",{method:e.method});var t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new h("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}},{key:"routes",get:function(){return this._routes}}])&&Bt(t.prototype,r),n&&Bt(t,n),e}();function Vt(e,t,r){var n;if("string"==typeof e){var o=new URL(e,location.href);n=new Ct((function(e){return e.url.href===o.href}),t,r)}else if(e instanceof RegExp)n=new Mt(e,t,r);else if("function"==typeof e)n=new Ct(e,t,r);else{if(!(e instanceof Ct))throw new h("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});n=e}return($t||(($t=new Gt).addFetchListener(),$t.addCacheListener()),$t).registerRoute(n),n}r(2);function Yt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Qt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Yt(Object(r),!0).forEach((function(t){Jt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Yt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function Jt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function zt(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function Xt(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){zt(a,n,o,i,u,"next",e)}function u(e){zt(a,n,o,i,u,"throw",e)}i(void 0)}))}}function Zt(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=tr(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function er(e){return function(e){if(Array.isArray(e))return rr(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||tr(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function tr(e,t){if(e){if("string"==typeof e)return rr(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?rr(e,t):void 0}}function rr(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function nr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function or(e){return"string"==typeof e?new Request(e):e}var ar=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cacheKeys={},Object.assign(this,r),this.event=r.event,this._strategy=t,this._handlerDeferred=new ce,this._extendLifetimePromises=[],this._plugins=er(t.plugins),this._pluginStateMap=new Map;var n,o=Zt(this._plugins);try{for(o.s();!(n=o.n()).done;){var a=n.value;this._pluginStateMap.set(a,{})}}catch(e){o.e(e)}finally{o.f()}this.event.waitUntil(this._handlerDeferred.promise)}var t,r,n,o,a,i,u,c,s;return t=e,(r=[{key:"fetch",value:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){var t=this;return this.waitUntil(Xt(regeneratorRuntime.mark((function r(){var n,o,a,i,u,c,s,f,l,p,y,v;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(n=t.event,!("navigate"===(o=or(e)).mode&&n instanceof FetchEvent&&n.preloadResponse)){r.next=9;break}return r.next=5,n.preloadResponse;case 5:if(!(a=r.sent)){r.next=9;break}return r.abrupt("return",a);case 9:i=t.hasCallback("fetchDidFail")?o.clone():null,r.prev=10,u=Zt(t.iterateCallbacks("requestWillFetch")),r.prev=12,u.s();case 14:if((c=u.n()).done){r.next=21;break}return s=c.value,r.next=18,s({request:o.clone(),event:n});case 18:o=r.sent;case 19:r.next=14;break;case 21:r.next=26;break;case 23:r.prev=23,r.t0=r.catch(12),u.e(r.t0);case 26:return r.prev=26,u.f(),r.finish(26);case 29:r.next=34;break;case 31:throw r.prev=31,r.t1=r.catch(10),new h("plugin-error-request-will-fetch",{thrownError:r.t1});case 34:return f=o.clone(),r.prev=35,r.next=38,fetch(o,"navigate"===o.mode?void 0:t._strategy.fetchOptions);case 38:l=r.sent,p=Zt(t.iterateCallbacks("fetchDidSucceed")),r.prev=41,p.s();case 43:if((y=p.n()).done){r.next=50;break}return v=y.value,r.next=47,v({event:n,request:f,response:l});case 47:l=r.sent;case 48:r.next=43;break;case 50:r.next=55;break;case 52:r.prev=52,r.t2=r.catch(41),p.e(r.t2);case 55:return r.prev=55,p.f(),r.finish(55);case 58:return r.abrupt("return",l);case 61:if(r.prev=61,r.t3=r.catch(35),!i){r.next=67;break}return r.next=67,t.runCallbacks("fetchDidFail",{error:r.t3,event:n,originalRequest:i.clone(),request:f.clone()});case 67:throw r.t3;case 68:case"end":return r.stop()}}),r,null,[[10,31],[12,23,26,29],[35,61],[41,52,55,58]])})))())}))},{key:"fetchAndCachePut",value:(s=Xt(regeneratorRuntime.mark((function e(t){var r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.fetch(t);case 2:return r=e.sent,n=r.clone(),this.waitUntil(this.cachePut(t,n)),e.abrupt("return",r);case 6:case"end":return e.stop()}}),e,this)}))),function(e){return s.apply(this,arguments)})},{key:"cacheMatch",value:function(e){var t=this;return this.waitUntil(Xt(regeneratorRuntime.mark((function r(){var n,o,a,i,u,c,s,f,l,h;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=or(e),a=t._strategy,i=a.cacheName,u=a.matchOptions,r.next=4,t.getCacheKey(n,"read");case 4:return c=r.sent,s=Qt(Qt({},u),{cacheName:i}),r.next=8,caches.match(c,s);case 8:o=r.sent,f=Zt(t.iterateCallbacks("cachedResponseWillBeUsed")),r.prev=11,f.s();case 13:if((l=f.n()).done){r.next=23;break}return h=l.value,r.next=17,h({cacheName:i,matchOptions:u,cachedResponse:o,request:c,event:t.event});case 17:if(r.t0=r.sent,r.t0){r.next=20;break}r.t0=void 0;case 20:o=r.t0;case 21:r.next=13;break;case 23:r.next=28;break;case 25:r.prev=25,r.t1=r.catch(11),f.e(r.t1);case 28:return r.prev=28,f.f(),r.finish(28);case 31:return r.abrupt("return",o);case 32:case"end":return r.stop()}}),r,null,[[11,25,28,31]])})))())}},{key:"cachePut",value:(c=Xt(regeneratorRuntime.mark((function e(t,r){var n,o,a,i,u,c,s,f,l,p,y,v;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=or(t),e.next=3,de(0);case 3:return e.next=5,this.getCacheKey(n,"write");case 5:o=e.sent,e.next=9;break;case 9:if(r){e.next=12;break}throw new h("cache-put-with-no-response",{url:_(o.url)});case 12:return e.next=14,this._ensureResponseSafeToCache(r);case 14:if(a=e.sent){e.next=18;break}return e.abrupt("return");case 18:return i=this._strategy,u=i.cacheName,c=i.matchOptions,e.next=21,self.caches.open(u);case 21:if(s=e.sent,!(f=this.hasCallback("cacheDidUpdate"))){e.next=29;break}return e.next=26,ie(s,o.clone(),["__WB_REVISION__"],c);case 26:e.t0=e.sent,e.next=30;break;case 29:e.t0=null;case 30:return l=e.t0,e.prev=32,e.next=35,s.put(o,f?a.clone():a);case 35:e.next=43;break;case 37:if(e.prev=37,e.t1=e.catch(32),"QuotaExceededError"!==e.t1.name){e.next=42;break}return e.next=42,ye();case 42:throw e.t1;case 43:p=Zt(this.iterateCallbacks("cacheDidUpdate")),e.prev=44,p.s();case 46:if((y=p.n()).done){e.next=52;break}return v=y.value,e.next=50,v({cacheName:u,oldResponse:l,newResponse:a.clone(),request:o,event:this.event});case 50:e.next=46;break;case 52:e.next=57;break;case 54:e.prev=54,e.t2=e.catch(44),p.e(e.t2);case 57:return e.prev=57,p.f(),e.finish(57);case 60:case"end":return e.stop()}}),e,this,[[32,37],[44,54,57,60]])}))),function(e,t){return c.apply(this,arguments)})},{key:"getCacheKey",value:(u=Xt(regeneratorRuntime.mark((function e(t,r){var n,o,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this._cacheKeys[r]){e.next=23;break}n=t,o=Zt(this.iterateCallbacks("cacheKeyWillBeUsed")),e.prev=3,o.s();case 5:if((a=o.n()).done){e.next=14;break}return i=a.value,e.t0=or,e.next=10,i({mode:r,request:n,event:this.event,params:this.params});case 10:e.t1=e.sent,n=(0,e.t0)(e.t1);case 12:e.next=5;break;case 14:e.next=19;break;case 16:e.prev=16,e.t2=e.catch(3),o.e(e.t2);case 19:return e.prev=19,o.f(),e.finish(19);case 22:this._cacheKeys[r]=n;case 23:return e.abrupt("return",this._cacheKeys[r]);case 24:case"end":return e.stop()}}),e,this,[[3,16,19,22]])}))),function(e,t){return u.apply(this,arguments)})},{key:"hasCallback",value:function(e){var t,r=Zt(this._strategy.plugins);try{for(r.s();!(t=r.n()).done;)if(e in t.value)return!0}catch(e){r.e(e)}finally{r.f()}return!1}},{key:"runCallbacks",value:(i=Xt(regeneratorRuntime.mark((function e(t,r){var n,o,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=Zt(this.iterateCallbacks(t)),e.prev=1,n.s();case 3:if((o=n.n()).done){e.next=9;break}return a=o.value,e.next=7,a(r);case 7:e.next=3;break;case 9:e.next=14;break;case 11:e.prev=11,e.t0=e.catch(1),n.e(e.t0);case 14:return e.prev=14,n.f(),e.finish(14);case 17:case"end":return e.stop()}}),e,this,[[1,11,14,17]])}))),function(e,t){return i.apply(this,arguments)})},{key:"iterateCallbacks",value:regeneratorRuntime.mark((function e(t){var r,n,o,a=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=Zt(this._strategy.plugins),e.prev=1,o=regeneratorRuntime.mark((function e(){var r,o,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("function"!=typeof(r=n.value)[t]){e.next=6;break}return o=a._pluginStateMap.get(r),i=function(e){var n=Qt(Qt({},e),{},{state:o});return r[t](n)},e.next=6,i;case 6:case"end":return e.stop()}}),e)})),r.s();case 4:if((n=r.n()).done){e.next=8;break}return e.delegateYield(o(),"t0",6);case 6:e.next=4;break;case 8:e.next=13;break;case 10:e.prev=10,e.t1=e.catch(1),r.e(e.t1);case 13:return e.prev=13,r.f(),e.finish(13);case 16:case"end":return e.stop()}}),e,this,[[1,10,13,16]])}))},{key:"waitUntil",value:function(e){return this._extendLifetimePromises.push(e),e}},{key:"doneWaiting",value:(a=Xt(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(t=this._extendLifetimePromises.shift())){e.next=5;break}return e.next=3,t;case 3:e.next=0;break;case 5:case"end":return e.stop()}}),e,this)}))),function(){return a.apply(this,arguments)})},{key:"destroy",value:function(){this._handlerDeferred.resolve()}},{key:"_ensureResponseSafeToCache",value:(o=Xt(regeneratorRuntime.mark((function e(t){var r,n,o,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=t,n=!1,o=Zt(this.iterateCallbacks("cacheWillUpdate")),e.prev=3,o.s();case 5:if((a=o.n()).done){e.next=18;break}return i=a.value,e.next=9,i({request:this.request,response:r,event:this.event});case 9:if(e.t0=e.sent,e.t0){e.next=12;break}e.t0=void 0;case 12:if(r=e.t0,n=!0,r){e.next=16;break}return e.abrupt("break",18);case 16:e.next=5;break;case 18:e.next=23;break;case 20:e.prev=20,e.t1=e.catch(3),o.e(e.t1);case 23:return e.prev=23,o.f(),e.finish(23);case 26:return n||r&&200!==r.status&&(r=void 0),e.abrupt("return",r);case 28:case"end":return e.stop()}}),e,this,[[3,20,23,26]])}))),function(e){return o.apply(this,arguments)})}])&&nr(t.prototype,r),n&&nr(t,n),e}();function ir(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=fr(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function ur(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function cr(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){ur(a,n,o,i,u,"next",e)}function u(e){ur(a,n,o,i,u,"throw",e)}i(void 0)}))}}function sr(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,o=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==u.return||u.return()}finally{if(o)throw a}}return r}(e,t)||fr(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function fr(e,t){if(e){if("string"==typeof e)return lr(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?lr(e,t):void 0}}function lr(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function hr(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function pr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var yr=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};hr(this,e),this.cacheName=D(t.cacheName),this.plugins=t.plugins||[],this.fetchOptions=t.fetchOptions,this.matchOptions=t.matchOptions}var t,r,n,o,a;return t=e,(r=[{key:"handle",value:function(e){return sr(this.handleAll(e),1)[0]}},{key:"handleAll",value:function(e){e instanceof FetchEvent&&(e={event:e,request:e.request});var t=e.event,r="string"==typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,o=new ar(this,{event:t,request:r,params:n}),a=this._getResponse(o,r,t);return[a,this._awaitComplete(a,o,r,t)]}},{key:"_getResponse",value:(a=cr(regeneratorRuntime.mark((function e(t,r,n){var o,a,i,u,c,s,f;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.runCallbacks("handlerWillStart",{event:n,request:r});case 2:return o=void 0,e.prev=3,e.next=6,this._handle(r,t);case 6:if((o=e.sent)&&"error"!==o.type){e.next=9;break}throw new h("no-response",{url:r.url});case 9:e.next=38;break;case 11:e.prev=11,e.t0=e.catch(3),a=ir(t.iterateCallbacks("handlerDidError")),e.prev=14,a.s();case 16:if((i=a.n()).done){e.next=25;break}return u=i.value,e.next=20,u({error:e.t0,event:n,request:r});case 20:if(!(o=e.sent)){e.next=23;break}return e.abrupt("break",25);case 23:e.next=16;break;case 25:e.next=30;break;case 27:e.prev=27,e.t1=e.catch(14),a.e(e.t1);case 30:return e.prev=30,a.f(),e.finish(30);case 33:if(o){e.next=37;break}throw e.t0;case 37:case 38:c=ir(t.iterateCallbacks("handlerWillRespond")),e.prev=39,c.s();case 41:if((s=c.n()).done){e.next=48;break}return f=s.value,e.next=45,f({event:n,request:r,response:o});case 45:o=e.sent;case 46:e.next=41;break;case 48:e.next=53;break;case 50:e.prev=50,e.t2=e.catch(39),c.e(e.t2);case 53:return e.prev=53,c.f(),e.finish(53);case 56:return e.abrupt("return",o);case 57:case"end":return e.stop()}}),e,this,[[3,11],[14,27,30,33],[39,50,53,56]])}))),function(e,t,r){return a.apply(this,arguments)})},{key:"_awaitComplete",value:(o=cr(regeneratorRuntime.mark((function e(t,r,n,o){var a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t;case 3:a=e.sent,e.next=8;break;case 6:e.prev=6,e.t0=e.catch(0);case 8:return e.prev=8,e.next=11,r.runCallbacks("handlerDidRespond",{event:o,request:n,response:a});case 11:return e.next=13,r.doneWaiting();case 13:e.next=18;break;case 15:e.prev=15,e.t1=e.catch(8),i=e.t1;case 18:return e.next=20,r.runCallbacks("handlerDidComplete",{event:o,request:n,response:a,error:i});case 20:if(r.destroy(),!i){e.next=23;break}throw i;case 23:case"end":return e.stop()}}),e,null,[[0,6],[8,15]])}))),function(e,t,r,n){return o.apply(this,arguments)})}])&&pr(t.prototype,r),n&&pr(t,n),e}();function vr(e){return(vr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function dr(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function mr(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function br(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function gr(e,t){return(gr=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function wr(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=kr(e);if(t){var o=kr(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return xr(this,r)}}function xr(e,t){return!t||"object"!==vr(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function kr(e){return(kr=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var _r=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&gr(e,t)}(u,e);var t,r,n,o,a,i=wr(u);function u(){return mr(this,u),i.apply(this,arguments)}return t=u,(r=[{key:"_handle",value:(o=regeneratorRuntime.mark((function e(t,r){var n,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=4,r.cacheMatch(t);case 4:if(n=e.sent){e.next=19;break}return e.prev=7,e.next=10,r.fetchAndCachePut(t);case 10:n=e.sent,e.next=16;break;case 13:e.prev=13,e.t0=e.catch(7),o=e.t0;case 16:e.next=20;break;case 19:case 20:if(n){e.next=23;break}throw new h("no-response",{url:t.url,error:o});case 23:return e.abrupt("return",n);case 24:case"end":return e.stop()}}),e,this,[[7,13]])})),a=function(){var e=this,t=arguments;return new Promise((function(r,n){var a=o.apply(e,t);function i(e){dr(a,r,n,i,u,"next",e)}function u(e){dr(a,r,n,i,u,"throw",e)}i(void 0)}))},function(e,t){return a.apply(this,arguments)})}])&&br(t.prototype,r),n&&br(t,n),u}(yr);function Rr(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}var Sr,Or,jr={cacheWillUpdate:(Sr=regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(200!==(r=t.response).status&&0!==r.status){e.next=3;break}return e.abrupt("return",r);case 3:return e.abrupt("return",null);case 4:case"end":return e.stop()}}),e)})),Or=function(){var e=this,t=arguments;return new Promise((function(r,n){var o=Sr.apply(e,t);function a(e){Rr(o,r,n,a,i,"next",e)}function i(e){Rr(o,r,n,a,i,"throw",e)}a(void 0)}))},function(e){return Or.apply(this,arguments)})};function Pr(e){return(Pr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ar(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function Er(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){Ar(a,n,o,i,u,"next",e)}function u(e){Ar(a,n,o,i,u,"throw",e)}i(void 0)}))}}function Cr(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Tr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function qr(e,t){return(qr=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Ur(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Ir(e);if(t){var o=Ir(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Lr(this,r)}}function Lr(e,t){return!t||"object"!==Pr(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ir(e){return(Ir=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Mr=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&qr(e,t)}(u,e);var t,r,n,o,a,i=Ur(u);function u(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Cr(this,u),(e=i.call(this,t)).plugins.some((function(e){return"cacheWillUpdate"in e}))||e.plugins.unshift(jr),e._networkTimeoutSeconds=t.networkTimeoutSeconds||0,e}return t=u,(r=[{key:"_handle",value:(a=Er(regeneratorRuntime.mark((function e(t,r){var n,o,a,i,u,c,s,f,l,p,y;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(n=[],o=[],this._networkTimeoutSeconds&&(i=this._getTimeoutPromise({request:t,logs:n,handler:r}),u=i.id,c=i.promise,a=u,o.push(c)),s=this._getNetworkPromise({timeoutId:a,request:t,logs:n,handler:r}),o.push(s),f=0,l=o;f<l.length;f++)p=l[f],r.waitUntil(p);return e.next=9,Promise.race(o);case 9:if(y=e.sent){e.next=14;break}return e.next=13,s;case 13:y=e.sent;case 14:if(y){e.next=17;break}throw new h("no-response",{url:t.url});case 17:return e.abrupt("return",y);case 18:case"end":return e.stop()}}),e,this)}))),function(e,t){return a.apply(this,arguments)})},{key:"_getTimeoutPromise",value:function(e){var t,r=this,n=e.request,o=(e.logs,e.handler);return{promise:new Promise((function(e){t=setTimeout(function(){var t=Er(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=e,t.next=4,o.cacheMatch(n);case 4:t.t1=t.sent,(0,t.t0)(t.t1);case 6:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),1e3*r._networkTimeoutSeconds)})),id:t}}},{key:"_getNetworkPromise",value:(o=Er(regeneratorRuntime.mark((function e(t){var r,n,o,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.timeoutId,n=t.request,t.logs,o=t.handler,e.prev=1,e.next=4,o.fetchAndCachePut(n);case 4:i=e.sent,e.next=10;break;case 7:e.prev=7,e.t0=e.catch(1),a=e.t0;case 10:if(r&&clearTimeout(r),!a&&i){e.next=17;break}return e.next=15,o.cacheMatch(n);case 15:i=e.sent;case 17:return e.abrupt("return",i);case 18:case"end":return e.stop()}}),e,this,[[1,7]])}))),function(e){return o.apply(this,arguments)})}])&&Tr(t.prototype,r),n&&Tr(t,n),u}(yr);function Dr(e){return(Dr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Nr(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function Kr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Wr(e,t){return(Wr=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Fr(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Br(e);if(t){var o=Br(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Hr(this,r)}}function Hr(e,t){return!t||"object"!==Dr(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Br(e){return(Br=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var $r=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Wr(e,t)}(i,e);var t,r,n,o,a=Fr(i);function i(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(t=a.call(this,e)).plugins.some((function(e){return"cacheWillUpdate"in e}))||t.plugins.unshift(jr),t}return t=i,(r=[{key:"_handle",value:(o=function(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){Nr(a,n,o,i,u,"next",e)}function u(e){Nr(a,n,o,i,u,"throw",e)}i(void 0)}))}}(regeneratorRuntime.mark((function e(t,r){var n,o,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.fetchAndCachePut(t).catch((function(){})),e.next=5,r.cacheMatch(t);case 5:if(!(o=e.sent)){e.next=10;break}e.next=20;break;case 10:return e.prev=11,e.next=14,n;case 14:o=e.sent,e.next=20;break;case 17:e.prev=17,e.t0=e.catch(11),a=e.t0;case 20:if(o){e.next=23;break}throw new h("no-response",{url:t.url,error:a});case 23:return e.abrupt("return",o);case 24:case"end":return e.stop()}}),e,this,[[11,17]])}))),function(e,t){return o.apply(this,arguments)})}])&&Kr(t.prototype,r),n&&Kr(t,n),i}(yr);function Gr(e){e.then((function(){}))}function Vr(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,o=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==u.return||u.return()}finally{if(o)throw a}}return r}(e,t)||Yr(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Yr(e,t){if(e){if("string"==typeof e)return Qr(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Qr(e,t):void 0}}function Qr(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Jr(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function zr(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){Jr(a,n,o,i,u,"next",e)}function u(e){Jr(a,n,o,i,u,"throw",e)}i(void 0)}))}}function Xr(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Zr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var en=function(){function e(t,r){var n=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=o.onupgradeneeded,i=o.onversionchange;Xr(this,e),this._db=null,this._name=t,this._version=r,this._onupgradeneeded=a,this._onversionchange=i||function(){return n.close()}}var t,r,n,o,a,i,u,c,s,f;return t=e,(r=[{key:"open",value:(f=zr(regeneratorRuntime.mark((function e(){var t=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this._db){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,new Promise((function(e,r){var n=!1;setTimeout((function(){n=!0,r(new Error("The open request was blocked and timed out"))}),t.OPEN_TIMEOUT);var o=indexedDB.open(t._name,t._version);o.onerror=function(){return r(o.error)},o.onupgradeneeded=function(e){n?(o.transaction.abort(),o.result.close()):"function"==typeof t._onupgradeneeded&&t._onupgradeneeded(e)},o.onsuccess=function(){var r=o.result;n?r.close():(r.onversionchange=t._onversionchange.bind(t),e(r))}}));case 4:return this._db=e.sent,e.abrupt("return",this);case 6:case"end":return e.stop()}}),e,this)}))),function(){return f.apply(this,arguments)})},{key:"getKey",value:(s=zr(regeneratorRuntime.mark((function e(t,r){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getAllKeys(t,r,1);case 2:return e.abrupt("return",e.sent[0]);case 3:case"end":return e.stop()}}),e,this)}))),function(e,t){return s.apply(this,arguments)})},{key:"getAll",value:(c=zr(regeneratorRuntime.mark((function e(t,r,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getAllMatching(t,{query:r,count:n});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e,this)}))),function(e,t,r){return c.apply(this,arguments)})},{key:"getAllKeys",value:(u=zr(regeneratorRuntime.mark((function e(t,r,n){var o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getAllMatching(t,{query:r,count:n,includeKeys:!0});case 2:return o=e.sent,e.abrupt("return",o.map((function(e){return e.key})));case 4:case"end":return e.stop()}}),e,this)}))),function(e,t,r){return u.apply(this,arguments)})},{key:"getAllMatching",value:(i=zr(regeneratorRuntime.mark((function e(t){var r,n,o,a,i,u,c,s,f,l=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=l.length>1&&void 0!==l[1]?l[1]:{},n=r.index,o=r.query,a=void 0===o?null:o,i=r.direction,u=void 0===i?"next":i,c=r.count,s=r.includeKeys,f=void 0!==s&&s,e.next=3,this.transaction([t],"readonly",(function(e,r){var o=e.objectStore(t),i=n?o.index(n):o,s=[],l=i.openCursor(a,u);l.onsuccess=function(){var e=l.result;e?(s.push(f?e:e.value),c&&s.length>=c?r(s):e.continue()):r(s)}}));case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e,this)}))),function(e){return i.apply(this,arguments)})},{key:"transaction",value:(a=zr(regeneratorRuntime.mark((function e(t,r,n){var o=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.open();case 2:return e.next=4,new Promise((function(e,a){var i=o._db.transaction(t,r);i.onabort=function(){return a(i.error)},i.oncomplete=function(){return e()},n(i,(function(t){return e(t)}))}));case 4:return e.abrupt("return",e.sent);case 5:case"end":return e.stop()}}),e,this)}))),function(e,t,r){return a.apply(this,arguments)})},{key:"_call",value:(o=zr(regeneratorRuntime.mark((function e(t,r,n){var o,a,i,u,c=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(o=c.length,a=new Array(o>3?o-3:0),i=3;i<o;i++)a[i-3]=c[i];return u=function(e,n){var o=e.objectStore(r),i=o[t].apply(o,a);i.onsuccess=function(){return n(i.result)}},e.next=4,this.transaction([r],n,u);case 4:return e.abrupt("return",e.sent);case 5:case"end":return e.stop()}}),e,this)}))),function(e,t,r){return o.apply(this,arguments)})},{key:"close",value:function(){this._db&&(this._db.close(),this._db=null)}},{key:"db",get:function(){return this._db}}])&&Zr(t.prototype,r),n&&Zr(t,n),e}();en.prototype.OPEN_TIMEOUT=2e3;for(var tn=function(){var e,t=Vr(nn[rn],2),r=t[0],n=function(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=Yr(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}(t[1]);try{var o=function(){var t=e.value;t in IDBObjectStore.prototype&&(en.prototype[t]=function(){var e=zr(regeneratorRuntime.mark((function e(n){var o,a,i,u=arguments;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(o=u.length,a=new Array(o>1?o-1:0),i=1;i<o;i++)a[i-1]=u[i];return e.next=3,this._call.apply(this,[t,n,r].concat(a));case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}())};for(n.s();!(e=n.n()).done;)o()}catch(e){n.e(e)}finally{n.f()}},rn=0,nn=Object.entries({readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]});rn<nn.length;rn++)tn();function on(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}var an=function(){var e=function(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){on(a,n,o,i,u,"next",e)}function u(e){on(a,n,o,i,u,"throw",e)}i(void 0)}))}}(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,new Promise((function(e,r){var n=indexedDB.deleteDatabase(t);n.onerror=function(){r(n.error)},n.onblocked=function(){r(new Error("Delete blocked"))},n.onsuccess=function(){e()}}));case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();r(5);function un(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return cn(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return cn(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function cn(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function sn(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function fn(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){sn(a,n,o,i,u,"next",e)}function u(e){sn(a,n,o,i,u,"throw",e)}i(void 0)}))}}function ln(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var hn=function(e){var t=new URL(e,location.href);return t.hash="",t.href},pn=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cacheName=t,this._db=new en("workbox-expiration",1,{onupgradeneeded:function(e){return r._handleUpgrade(e)}})}var t,r,n,o,a,i;return t=e,(r=[{key:"_handleUpgrade",value:function(e){var t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),an(this._cacheName)}},{key:"setTimestamp",value:(i=fn(regeneratorRuntime.mark((function e(t,r){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=hn(t),n={url:t,timestamp:r,cacheName:this._cacheName,id:this._getId(t)},e.next=4,this._db.put("cache-entries",n);case 4:case"end":return e.stop()}}),e,this)}))),function(e,t){return i.apply(this,arguments)})},{key:"getTimestamp",value:(a=fn(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._db.get("cache-entries",this._getId(t));case 2:return r=e.sent,e.abrupt("return",r.timestamp);case 4:case"end":return e.stop()}}),e,this)}))),function(e){return a.apply(this,arguments)})},{key:"expireEntries",value:(o=fn(regeneratorRuntime.mark((function e(t,r){var n,o,a,i,u,c=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._db.transaction("cache-entries","readwrite",(function(e,n){var o=e.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),a=[],i=0;o.onsuccess=function(){var e=o.result;if(e){var u=e.value;u.cacheName===c._cacheName&&(t&&u.timestamp<t||r&&i>=r?a.push(e.value):i++),e.continue()}else n(a)}}));case 2:n=e.sent,o=[],a=un(n),e.prev=5,a.s();case 7:if((i=a.n()).done){e.next=14;break}return u=i.value,e.next=11,this._db.delete("cache-entries",u.id);case 11:o.push(u.url);case 12:e.next=7;break;case 14:e.next=19;break;case 16:e.prev=16,e.t0=e.catch(5),a.e(e.t0);case 19:return e.prev=19,a.f(),e.finish(19);case 22:return e.abrupt("return",o);case 23:case"end":return e.stop()}}),e,this,[[5,16,19,22]])}))),function(e,t){return o.apply(this,arguments)})},{key:"_getId",value:function(e){return this._cacheName+"|"+hn(e)}}])&&ln(t.prototype,r),n&&ln(t,n),e}();function yn(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,t){if(!e)return;if("string"==typeof e)return vn(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return vn(e,t)}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function vn(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function dn(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function mn(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){dn(a,n,o,i,u,"next",e)}function u(e){dn(a,n,o,i,u,"throw",e)}i(void 0)}))}}function bn(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function gn(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var wn=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};bn(this,e),this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=r.maxEntries,this._maxAgeSeconds=r.maxAgeSeconds,this._matchOptions=r.matchOptions,this._cacheName=t,this._timestampModel=new pn(t)}var t,r,n,o,a,i,u;return t=e,(r=[{key:"expireEntries",value:(u=mn(regeneratorRuntime.mark((function e(){var t,r,n,o,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this._isRunning){e.next=3;break}return this._rerunRequested=!0,e.abrupt("return");case 3:return this._isRunning=!0,t=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,e.next=7,this._timestampModel.expireEntries(t,this._maxEntries);case 7:return r=e.sent,e.next=10,self.caches.open(this._cacheName);case 10:n=e.sent,o=yn(r),e.prev=12,o.s();case 14:if((a=o.n()).done){e.next=20;break}return i=a.value,e.next=18,n.delete(i,this._matchOptions);case 18:e.next=14;break;case 20:e.next=25;break;case 22:e.prev=22,e.t0=e.catch(12),o.e(e.t0);case 25:return e.prev=25,o.f(),e.finish(25);case 28:this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,Gr(this.expireEntries()));case 31:case"end":return e.stop()}}),e,this,[[12,22,25,28]])}))),function(){return u.apply(this,arguments)})},{key:"updateTimestamp",value:(i=mn(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,this._timestampModel.setTimestamp(t,Date.now());case 3:case"end":return e.stop()}}),e,this)}))),function(e){return i.apply(this,arguments)})},{key:"isURLExpired",value:(a=mn(regeneratorRuntime.mark((function e(t){var r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this._maxAgeSeconds){e.next=6;break}e.next=3;break;case 3:return e.abrupt("return",!1);case 6:return e.next=8,this._timestampModel.getTimestamp(t);case 8:return r=e.sent,n=Date.now()-1e3*this._maxAgeSeconds,e.abrupt("return",r<n);case 11:case"end":return e.stop()}}),e,this)}))),function(e){return a.apply(this,arguments)})},{key:"delete",value:(o=mn(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this._rerunRequested=!1,e.next=3,this._timestampModel.expireEntries(1/0);case 3:case"end":return e.stop()}}),e,this)}))),function(){return o.apply(this,arguments)})}])&&gn(t.prototype,r),n&&gn(t,n),e}();function xn(e){se.add(e)}function kn(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,o=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==u.return||u.return()}finally{if(o)throw a}}return r}(e,t)||Rn(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _n(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=Rn(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(u)throw a}}}}function Rn(e,t){if(e){if("string"==typeof e)return Sn(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Sn(e,t):void 0}}function Sn(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function On(e,t,r,n,o,a,i){try{var u=e[a](i),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,o)}function jn(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){On(a,n,o,i,u,"next",e)}function u(e){On(a,n,o,i,u,"throw",e)}i(void 0)}))}}function Pn(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function An(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var En=function(){function e(){var t=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Pn(this,e),this.cachedResponseWillBeUsed=function(){var e=jn(regeneratorRuntime.mark((function e(r){var n,o,a,i,u,c,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=r.event,o=r.request,a=r.cacheName,i=r.cachedResponse){e.next=3;break}return e.abrupt("return",null);case 3:if(u=t._isResponseDateFresh(i),Gr((c=t._getCacheExpiration(a)).expireEntries()),s=c.updateTimestamp(o.url),n)try{n.waitUntil(s)}catch(e){0}return e.abrupt("return",u?i:null);case 9:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.cacheDidUpdate=function(){var e=jn(regeneratorRuntime.mark((function e(r){var n,o,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.cacheName,o=r.request,a=t._getCacheExpiration(n),e.next=5,a.updateTimestamp(o.url);case 5:return e.next=7,a.expireEntries();case 7:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this._config=r,this._maxAgeSeconds=r.maxAgeSeconds,this._cacheExpirations=new Map,r.purgeOnQuotaError&&xn((function(){return t.deleteCacheAndMetadata()}))}var t,r,n,o;return t=e,(r=[{key:"_getCacheExpiration",value:function(e){if(e===D())throw new h("expire-custom-caches-only");var t=this._cacheExpirations.get(e);return t||(t=new wn(e,this._config),this._cacheExpirations.set(e,t)),t}},{key:"_isResponseDateFresh",value:function(e){if(!this._maxAgeSeconds)return!0;var t=this._getDateHeaderTimestamp(e);return null===t||t>=Date.now()-1e3*this._maxAgeSeconds}},{key:"_getDateHeaderTimestamp",value:function(e){if(!e.headers.has("date"))return null;var t=e.headers.get("date"),r=new Date(t).getTime();return isNaN(r)?null:r}},{key:"deleteCacheAndMetadata",value:(o=jn(regeneratorRuntime.mark((function e(){var t,r,n,o,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=_n(this._cacheExpirations),e.prev=1,t.s();case 3:if((r=t.n()).done){e.next=11;break}return n=kn(r.value,2),o=n[0],a=n[1],e.next=7,self.caches.delete(o);case 7:return e.next=9,a.delete();case 9:e.next=3;break;case 11:e.next=16;break;case 13:e.prev=13,e.t0=e.catch(1),t.e(e.t0);case 16:return e.prev=16,t.f(),e.finish(16);case 19:this._cacheExpirations=new Map;case 20:case"end":return e.stop()}}),e,this,[[1,13,16,19]])}))),function(){return o.apply(this,arguments)})}])&&An(t.prototype,r),n&&An(t,n),e}();console.log("Hai Domo, From Service Worker"),self.skipWaiting(),self.addEventListener("activate",(function(){return self.clients.claim()})),console.log("Yay! Workbox is loaded 🎉"),I({prefix:"Basi-Lite",precache:"precache",runtime:"runtime"});var Cn,Tn=self.__WB_MANIFEST;Cn={ignoreURLParametersMatching:[/.*/]},function(e){ut().precache(e)}(Tn||[]),function(e){var t=ut();q(new kt(t,e))}(Cn),console.log(Tn),Vt(/^https:\/\/dicoding-restaurant-api\.el\.r\.appspot\.com\/(?:(list|detail))/,new Mr({cacheName:"dicoding-restaurant-api",plugins:[new En({maxAgeSeconds:5184e3,maxEntries:100})]})),Vt((function(e){return"image"===e.request.destination}),new _r({cacheName:"images",plugins:[new En({maxEntries:60,maxAgeSeconds:2592e3})]})),Vt(/^https:\/\/fonts\.googleapis\.com/,new $r({cacheName:"google-fonts-stylesheets"})),Vt(/^https:\/\/fonts\.gstatic\.com/,new _r({cacheName:"google-fonts-webfonts",plugins:[new St({statuses:[0,200]}),new En({maxAgeSeconds:31536e3,maxEntries:30})]})),self.addEventListener("activate",(function(e){var t=M();e.waitUntil(jt(t).then((function(e){})))})),self.addEventListener("push",(function(e){var t={body:e.data.text()};e.waitUntil(self.registration.showNotification("Get Started With Workbox",t))}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,